package com.niit.controllers;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.niit.dao.JobDao;
import com.niit.dao.UserDao;
import com.niit.model.ErrorClazz;
import com.niit.model.Job;
import com.niit.model.User;

@RestController
public class JobController {
@Autowired
private JobDao jobDao;
@Autowired
private UserDao userDao;

public ResponseEntity<?> saveJob(@RequestBody Job job,HttpSession session){
	//Authentication and Authorization
	//Authentication - who u are?
	//Authorization - role?
	String email=(String)session.getAttribute("email");
	if(email==null){//not loggedf in
		ErrorClazz errorClazz=new ErrorClazz(7, "Unauthorized access.. please login");
		return new ResponseEntity<ErrorClazz>(errorClazz,HttpStatus.UNAUTHORIZED);
		
	}
	//If email != null,user is an authentication user
	//check user is authorized to insert a new job or not. check the role
	//check if the logged in user is admin or not
	User user=userDao.getUser(email);
	if(!user.getRole().equals("ADMIN")){
		ErrorClazz errorClazz=new ErrorClazz(6, "Access Denied..");
		return new ResponseEntity<ErrorClazz>(errorClazz,HttpStatus.UNAUTHORIZED);
		
	}
	//Authentiacated and authorized to insert new job details

try{
	jobDao.saveJob(job);
	return new ResponseEntity<Void>(HttpStatus.OK);
}catch(Exception e){
	ErrorClazz errorClazz=new ErrorClazz(4, "Unable to insert job details.."+e.getMessage());
	return new ResponseEntity<ErrorClazz>(errorClazz,HttpStatus.INTERNAL_SERVER_ERROR);
}
}
}